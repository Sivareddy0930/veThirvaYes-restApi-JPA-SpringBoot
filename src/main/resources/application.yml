spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    password: Siva@9866$
    url: jdbc:mysql://localhost:3306/SivaIT?createDatabaseIfNotExist=true
    username: root
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
   
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/Employees?createDatabaseIfNotExist=true
#by using createDatabaseIfNotExist=true we can create datbase automatically in server.
# true Represent to check wheather datbase is already there or not in server.
#Here Employee is our database.
 
#spring.datasource.username=root
#spring.datasource.password=Siva@9866$


#spring.jpa.hibernate.ddl-auto=update
#create – Hibernate first drops existing tables if already exists and then creates new tables.
#update – The object model created based on the mappings (annotations or XML) is compared with the existing schema, and 
#         then Hibernate updates the schema according to the diff. It never deletes the existing tables or columns even if they
#         are no longer required by the application.
#create-drop – similar to create, with the addition that Hibernate will drop the database after all operations are completed;
#              typically used for unit testing.
#validate – Hibernate only validates whether the tables and columns exist; otherwise, it throws an exception.
#none – This value effectively turns off the DDL generation.

#spring.jpa.show-sql=true
#it will print the sql querys in commendline that we used in appliaction 
